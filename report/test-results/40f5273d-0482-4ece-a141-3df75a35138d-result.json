{"name": "test_create_product[\\u6d4b\\u8bd5electric\\u9879\\u76ee-electric]", "status": "broken", "statusDetails": {"message": "LookupError: Find Control Timeout(10s): {Name: '测试electric项目', ControlType: TreeItemControl}", "trace": "self = <test_tree.TestTree object at 0x000001D7B24508D0>\nproject_name = '测试electric项目', model = 'electric'\n\n    @pytest.mark.parametrize(\"project_name,model\",\n                             [(\"测试brief项目\", \"brief\"),\n                              (\"测试briefV20项目\", \"briefV20\"),\n                              (\"测试electric项目\", \"electric\"),\n                              (\"测试v100项目\", \"v100\")])  # 配置参数化进行组合\n    def test_create_product(self, project_name, model):\n>       tree.create_product(project_name, model)\n\ntestcase\\test_tree.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\tree.py:13: in create_product\n    auto.TreeItemControl(Name=project_name).RightClick()\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:6580: in RightClick\n    point = self.MoveCursorToInnerPos(x, y, ratioX, ratioY, simulateMove)\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:6507: in MoveCursorToInnerPos\n    rect = self.BoundingRectangle\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:5907: in BoundingRectangle\n    rect = self.Element.CurrentBoundingRectangle\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:6224: in Element\n    self.Refind(maxSearchSeconds=TIME_OUT_SECOND, searchIntervalSeconds=self.searchInterval)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <uiautomation.uiautomation.TreeItemControl object at 0x000001D7B3FEBED0>\nmaxSearchSeconds = 10, searchIntervalSeconds = 0.5, raiseException = True\n\n    def Refind(self, maxSearchSeconds: float = TIME_OUT_SECOND, searchIntervalSeconds: float = SEARCH_INTERVAL, raiseException: bool = True) -> bool:\n        \"\"\"\n        Refind the control every searchIntervalSeconds seconds in maxSearchSeconds seconds.\n        maxSearchSeconds: float.\n        searchIntervalSeconds: float.\n        raiseException: bool, if True, raise a LookupError if timeout.\n        Return bool, True if find.\n        \"\"\"\n        if not self.Exists(maxSearchSeconds, searchIntervalSeconds, False if raiseException else DEBUG_EXIST_DISAPPEAR):\n            if raiseException:\n                Logger.ColorfullyLog('<Color=Red>Find Control Timeout({}s): </Color>{}'.format(maxSearchSeconds, self.GetColorfulSearchPropertiesStr()))\n>               raise LookupError('Find Control Timeout({}s): {}'.format(maxSearchSeconds, self.GetSearchPropertiesStr()))\nE               LookupError: Find Control Timeout(10s): {Name: '测试electric项目', ControlType: TreeItemControl}\n\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:6475: LookupError"}, "attachments": [{"name": "stdout", "source": "8b3fbc27-8ff8-4408-a6d5-d818a7ef4c5b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "project_name", "value": "'测试electric项目'"}, {"name": "model", "value": "'electric'"}], "start": 1679906060605, "stop": 1679906072628, "uuid": "2ac80e3b-f520-403f-9d07-62c063c15ddc", "historyId": "3bbe642337a0f0361692d6717cc2eec6", "testCaseId": "02a4d2e44e9b41826cf9e52f5c9cc906", "fullName": "testcase.test_tree.TestTree#test_create_product", "labels": [{"name": "epic", "value": "构型树模块"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_tree"}, {"name": "subSuite", "value": "TestTree"}, {"name": "host", "value": "WINDOWS-I3APRBK"}, {"name": "thread", "value": "11568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_tree"}]}