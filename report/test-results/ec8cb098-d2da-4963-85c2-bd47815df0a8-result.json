{"name": "test_create_product[\\u6d4b\\u8bd5brief\\u9879\\u76ee-brief]", "status": "broken", "statusDetails": {"message": "LookupError: Find Control Timeout(10s): {Name: '取消', ControlType: ButtonControl}", "trace": "win_name = 'CC飞机飞管计算机全连接架构内总线数据流设计开发'\npath = 'C:\\\\Users\\\\WR\\\\Desktop\\\\ICMMain.exe.lnk'\n\n    def win_exist(win_name=ICD_NAME, path=ICD_PATH):\n        try:\n            # 切换到当前ICMMain应用，将窗口放于窗口前\n>           show_win(win_name)\n\ncommon\\utile.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nwin_name = 'CC飞机飞管计算机全连接架构内总线数据流设计开发'\n\n    def show_win(win_name):\n        hwnd = win32gui.FindWindow(None, win_name)\n        # 窗口需要正常大小且在后台，不能最小化\n        # win32gui.ShowWindow(hwnd, win32con.SW_SHOWNORMAL)\n        # 窗口需要最大化且在后台，不能最小化\n        ctypes.windll.user32.ShowWindow(hwnd, 3)\n>       win32gui.SetWindowPos(hwnd, win32con.HWND_TOPMOST, 0, 0, 0, 0,\n                              win32con.SWP_NOMOVE | win32con.SWP_NOACTIVATE | win32con.SWP_NOOWNERZORDER | win32con.SWP_SHOWWINDOW | win32con.SWP_NOSIZE)\nE       pywintypes.error: (1400, 'SetWindowPos', '无效的窗口句柄。')\n\ncommon\\utile.py:20: error\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_tree.TestTree object at 0x000001D7B2437290>\nproject_name = '测试brief项目', model = 'brief'\n\n    @pytest.mark.parametrize(\"project_name,model\",\n                             [(\"测试brief项目\", \"brief\"),\n                              (\"测试briefV20项目\", \"briefV20\"),\n                              (\"测试electric项目\", \"electric\"),\n                              (\"测试v100项目\", \"v100\")])  # 配置参数化进行组合\n    def test_create_product(self, project_name, model):\n>       tree.create_product(project_name, model)\n\ntestcase\\test_tree.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\tree.py:11: in create_product\n    win_exist()\ncommon\\utile.py:38: in win_exist\n    auto.ButtonControl(Name='取消').Click()\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:6546: in Click\n    point = self.MoveCursorToInnerPos(x, y, ratioX, ratioY, simulateMove)\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:6507: in MoveCursorToInnerPos\n    rect = self.BoundingRectangle\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:5907: in BoundingRectangle\n    rect = self.Element.CurrentBoundingRectangle\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:6224: in Element\n    self.Refind(maxSearchSeconds=TIME_OUT_SECOND, searchIntervalSeconds=self.searchInterval)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <uiautomation.uiautomation.ButtonControl object at 0x000001D7B2459250>\nmaxSearchSeconds = 10, searchIntervalSeconds = 0.5, raiseException = True\n\n    def Refind(self, maxSearchSeconds: float = TIME_OUT_SECOND, searchIntervalSeconds: float = SEARCH_INTERVAL, raiseException: bool = True) -> bool:\n        \"\"\"\n        Refind the control every searchIntervalSeconds seconds in maxSearchSeconds seconds.\n        maxSearchSeconds: float.\n        searchIntervalSeconds: float.\n        raiseException: bool, if True, raise a LookupError if timeout.\n        Return bool, True if find.\n        \"\"\"\n        if not self.Exists(maxSearchSeconds, searchIntervalSeconds, False if raiseException else DEBUG_EXIST_DISAPPEAR):\n            if raiseException:\n                Logger.ColorfullyLog('<Color=Red>Find Control Timeout({}s): </Color>{}'.format(maxSearchSeconds, self.GetColorfulSearchPropertiesStr()))\n>               raise LookupError('Find Control Timeout({}s): {}'.format(maxSearchSeconds, self.GetSearchPropertiesStr()))\nE               LookupError: Find Control Timeout(10s): {Name: '取消', ControlType: ButtonControl}\n\nvenv\\Lib\\site-packages\\uiautomation\\uiautomation.py:6475: LookupError"}, "attachments": [{"name": "stdout", "source": "043290cf-b2f0-44f1-8b40-9c2777cd5dda-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "project_name", "value": "'测试brief项目'"}, {"name": "model", "value": "'brief'"}], "start": 1679906030863, "stop": 1679906047981, "uuid": "ae4a9b57-b20e-4806-995e-eddc7d122ec5", "historyId": "e41f4e44ba637642951a89c3ab831855", "testCaseId": "02a4d2e44e9b41826cf9e52f5c9cc906", "fullName": "testcase.test_tree.TestTree#test_create_product", "labels": [{"name": "epic", "value": "构型树模块"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_tree"}, {"name": "subSuite", "value": "TestTree"}, {"name": "host", "value": "WINDOWS-I3APRBK"}, {"name": "thread", "value": "11568-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_tree"}]}